Checking test execution result...
[!] Test execution result: FAILED
Checking source code format...
  Preparing source code for format check...
  Running format check...
// =====================================================
//  Running cargo fmt...
// =====================================================
Diff in /home/runner/work/rustlings-eviarch666/rustlings-eviarch666/format_check/src/lib.rs:1:
 /*
-	single linked list merge
-	This problem requires you to merge two ordered singly linked lists into one ordered singly linked list
+    single linked list merge
+    This problem requires you to merge two ordered singly linked lists into one ordered singly linked list
 */
 // I AM NOT DONE
 
Diff in /home/runner/work/rustlings-eviarch666/rustlings-eviarch666/format_check/src/lib.rs:16:
 
 impl<T> Node<T> {
     fn new(t: T) -> Node<T> {
-        Node {
-            val: t,
-            next: None,
-        }
+        Node { val: t, next: None }
     }
 }
 #[derive(Debug)]
Diff in /home/runner/work/rustlings-eviarch666/rustlings-eviarch666/format_check/src/lib.rs:69:
             },
         }
     }
-	pub fn merge(list_a:LinkedList<T>,list_b:LinkedList<T>) -> Self
-	{
-		//TODO
-		Self {
+    pub fn merge(list_a: LinkedList<T>, list_b: LinkedList<T>) -> Self {
+        //TODO
+        Self {
             length: 0,
             start: None,
             end: None,
Diff in /home/runner/work/rustlings-eviarch666/rustlings-eviarch666/format_check/src/lib.rs:79:
         }
-	}
+    }
 }
 
 impl<T> Display for LinkedList<T>
Diff in /home/runner/work/rustlings-eviarch666/rustlings-eviarch666/format_check/src/lib.rs:130:
 
     #[test]
     fn test_merge_linked_list_1() {
-		let mut list_a = LinkedList::<i32>::new();
-		let mut list_b = LinkedList::<i32>::new();
-		let vec_a = vec![1,3,5,7];
-		let vec_b = vec![2,4,6,8];
-		let target_vec = vec![1,2,3,4,5,6,7,8];
-		
-		for i in 0..vec_a.len(){
-			list_a.add(vec_a[i]);
-		}
-		for i in 0..vec_b.len(){
-			list_b.add(vec_b[i]);
-		}
